#!/bin/sh
#
# chkconfig: 345 80 20
# description: Starts and stops Documentum Docbroker
# processname: dmdocbroker
# author: Mark Faine <mark.faine@nasa.gov>
# $Id: dmdocbroker 24 2011-06-22 19:44:24Z mark.faine@gmail.com $

## 2017-01-18 Gareth McMillan
## Coppied from Mark's work, updated to use DCTM7.3

#to be placed in /etc/init.d

## Source Documentum configuration
if [ -e /etc/profile.d/documentum.sh ]; then
 . /etc/profile.d/documentum.sh
else
  echo "Check and configure documentum configuration script in /etc/profile.d"
  exit 1
fi

## Source LSB init functions
if [ -e /etc/init.d/functions ]; then
. /etc/init.d/functions
else
  echo "Missing LSB init functions script"
  exit 1
fi

## Specific to this process
SERVICE_NAME="Documentum Docbroker"
PROCESS=<%=@docbroker_name%>
PROCESS_PORT=<%=@docbroker_port%>
PROCESS_CONFIG_FILE=${DOCUMENTUM}/dba/Docbroker.ini
PROCESS_START_CMD="${DM_HOME}/bin/dmdocbroker -port ${PROCESS_PORT} -init_file ${PROCESS_CONFIG_FILE}"
PROCESS_STOP_CMD="${DM_HOME}/bin/dmshutdown docbroker -B -T$(hostname) -P -N${PROCESS_PORT}"

## End Specific to this process

PROCESS_PID_FILE=${DOCUMENTUM}/dba/${PROCESS}.pid

# Logging
if [[ ! -z "${LOGDIR}" && "${LOGDIR}" != ""  &&  -e "${LOGDIR}" ]]; then
    PROCESS_LOGFILE="${LOGDIR}/${PROCESS}.$(hostname).t.$TIME.log"
else
  echo "Log directory ${LOGDIR} is inaccessible, please correct and try again"
  exit 1
fi

# Specific to this process
function start_process(){
  DAEMONIZE=/usr/local/sbin/daemonize
  echo -n "Starting ${PROCESS} on port ${PROCESS_PORT}: "
  if [ ! -z "$DMUSER" ]; then
    if [ "$EUID" = "0" ]; then
      ${DAEMONIZE} -u ${DMUSER} -c ${DM_HOME}/bin -e ${PROCESS_LOGFILE} -o ${PROCESS_LOGFILE} -p ${PROCESS_PID_FILE} ${PROCESS_START_CMD}
	  elif [ "$EUID" = $(id -u $DMUSER) ];  then
      ${DAEMONIZE} -c ${DM_HOME}/bin -e ${PROCESS_LOGFILE} -o ${PROCESS_LOGFILE} -p ${PROCESS_PID_FILE} ${PROCESS_START_CMD}
    else
	    echo "Service must be run as root, or $DMUSER"
	    exit
	  fi
  fi
  if [[ $? -eq 0 ]]; then
   success "${SERVICE_NAME} startup"
   echo
  else
   failure "${SERVICE_NAME} startup"
   echo
  fi
}

function stop_process(){
  DAEMONIZE=/usr/local/sbin/daemonize
  echo -n "Stopping ${PROCESS} on port ${PROCESS_PORT}: "
  if [ ! -z "$DMUSER" ]; then
    if [ "$EUID" = "0" ]; then
      ${DAEMONIZE} -u ${DMUSER} -c ${DM_HOME}/bin -e ${PROCESS_LOGFILE} -o ${PROCESS_LOGFILE} -p ${PROCESS_PID_FILE} ${PROCESS_STOP_CMD}
	  elif [ "$EUID" = $(id -u $DMUSER) ];  then
      ${DAEMONIZE} -c ${DM_HOME}/bin -e ${PROCESS_LOGFILE} -o ${PROCESS_LOGFILE} -p ${PROCESS_PID_FILE} ${PROCESS_STOP_CMD}
    else
	    echo "Service must be run as root, or $DMUSER"
	    exit
	  fi
  fi
  if [[ $? -eq 0 ]]; then
   success "${SERVICE_NAME} stopped"
   rm -f ${PROCESS_PID_FILE}
   echo
  else
   failure "${SERVICE_NAME} stopped"
   echo
  fi
}

status() {
	if [ -f $PROCESS_PID_FILE ]; then
		read ppid < $PROCESS_PID_FILE
		if [ `ps --pid $ppid 2> /dev/null | grep -c $ppid 2> /dev/null` -eq '1' ]; then
			echo "$PROCESS is running (pid $ppid)"
			return 0
		else
			echo "$PROCESS dead but pid file exists"
			return 1
		fi
	fi
	echo "$PROCESS is not running"
	return 3
}

# End Specific to this process


case "$1" in
  start)
        # If already running don't attempt to start
        if [[ -e ${PROCESS_PID_FILE} && -e ${PROCESS_LOCK_FILE} ]]; then
          status "${PROCESS}" > /dev/null 2>&1
          if [[ $? -eq 0 ]]; then
             exit 0
          fi
        fi
	# Call process specific start function
	start_process
        ;;
  stop)
        # Call process specific function
        # If already stopped don't attempt to stop
        status "${PROCESS}" > /dev/null 2>&1
        if [[ $? -eq 3  ]]; then
           exit 0
        fi
	stop_process
        ;;
  restart)
        $0 stop
	    $0 start
        ;;
  status)
	   status
	    ;;
  *)
        echo "Usage: service ${PROCESS} {start|start_all|stop|restart|status}"
        exit 1
esac
